swagger: "2.0"
info:
    title: microservice-mail
    description: 'Mailing microservice for the AMT 2017 course @ HEIG-VD.'
    version: 0.1.0
paths:
#    /mails:
#        get:
#            tags:
#                - mail
#            description: Get the mail history.
#            responses:
#                '200':
#                    description: Returned the history successfully.
#                '204':
#                    description: Mail history is empty.
#        post:
#            tags:
#                - mail
#            description: Send a mail (can use multiple payloads).
#            responses:
#                '201':
#                    description: Mail sent successfully.
#                '206':
#                    description: Not all mails were able to be sent.
#                '406':
#                    description: Wrong formatting.
#
#    /mails/{id}:
#        get:
#            tags:
#                - mail
#            description: Get the status of a specified mail.
#            responses:
#                '200':
#                    description: Returned the status successfully.
#                '400':
#                    description: Request malformed.
#                '404':
#                    description: Mail not found in history.
#
#        parameters:
#            - in: path
#              name: id
#              description: The id of the mail we want to do something with.
#              required: true
#              type: integer

    /templates:
        get:
            tags:
                - template
            description: Get the list of available templates.
            responses:
                '200':
                    description: Returned the template list successfuly.
                '204':
                    description: No templates to return.
        post:
            tags:
                - template
            description: Create a new template.
            responses:
                '200':
                    description: Template has been created successfully.
                '406':
                    description: Invalid template.
            parameters:
                - name: templateDto
                  in: body
                  schema:
                    $ref: "#/definitions/TemplateDto"

#    /templates/{id}:
#        get:
#            tags:
#                - template
#            description: Get a specified template.
#            responses:
#                '200':
#                    description: Returned the template successfully.
#                '400':
#                    description: Request malformed.
#                '404':
#                    description: Template not found.
#        put:
#            tags:
#                - template
#            description: Update a specified template.
#            responses:
#                '200':
#                    description: Updated the template successfully.
#                '400':
#                    description: Request malformed.
#                '404':
#                    description: Template not found.
#                '406':
#                    description: Invalid new template.
#        delete:
#            tags:
#                - template
#            description: Delete a specified template.
#            responses:
#                '200':
#                    description: Deleted the template successfully.
#                '400':
#                    description: Request malformed.
#                '404':
#                    description: Template not found.
#        parameters:
#            - name: id
#              in: path
#              description: The id of the template we want to do something with.
#              required: true
#              type: integer

definitions:
    MailDto:
        type: object
        properties:
            id:
                type: integer

    TemplateDto:
        type: object
        properties:
            id:
                type: integer
            name:
                type: string
            description:
                type: string
            content:
                type: string
