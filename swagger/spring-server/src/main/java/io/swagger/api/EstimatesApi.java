/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

package io.swagger.api;

import io.swagger.annotations.*;
import io.swagger.model.Error;
import io.swagger.model.PriceEstimate;
import io.swagger.model.Product;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.UUID;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-11-17T13:11:51.948Z")

@Api(value = "estimates", description = "the estimates API")
public interface EstimatesApi {

    @ApiOperation(value = "Price Estimates", notes = "The Price Estimates endpoint returns an estimated price range for each product offered at a given location. The price estimate is provided as a formatted string with the full price range and the localized currency symbol.<br><br>The response also includes low and high estimates, and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for situations requiring currency conversion. When surge is active for a particular product, its surge_multiplier will be greater than 1, but the price estimate already factors in this multiplier. ", response = PriceEstimate.class, responseContainer = "List", tags = {"Estimates",})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "An array of price estimates by product", response = PriceEstimate.class, responseContainer = "List"),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class)})

    @RequestMapping(value = "/estimates/price",
        produces = {"application/json"},
        method = RequestMethod.GET)
    ResponseEntity<List<PriceEstimate>> estimatesPriceGet(@NotNull @ApiParam(value = "Latitude component of start location.", required = true) @RequestParam(value = "start_latitude", required = true) Double startLatitude, @NotNull @ApiParam(value = "Longitude component of start location.", required = true) @RequestParam(value = "start_longitude", required = true) Double startLongitude, @NotNull @ApiParam(value = "Latitude component of end location.", required = true) @RequestParam(value = "end_latitude", required = true) Double endLatitude, @NotNull @ApiParam(value = "Longitude component of end location.", required = true) @RequestParam(value = "end_longitude", required = true) Double endLongitude);


    @ApiOperation(value = "Time Estimates", notes = "The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.", response = Product.class, responseContainer = "List", tags = {"Estimates",})
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "An array of products", response = Product.class, responseContainer = "List"),
        @ApiResponse(code = 200, message = "Unexpected error", response = Error.class)})

    @RequestMapping(value = "/estimates/time",
        produces = {"application/json"},
        method = RequestMethod.GET)
    ResponseEntity<List<Product>> estimatesTimeGet(@NotNull @ApiParam(value = "Latitude component of start location.", required = true) @RequestParam(value = "start_latitude", required = true) Double startLatitude, @NotNull @ApiParam(value = "Longitude component of start location.", required = true) @RequestParam(value = "start_longitude", required = true) Double startLongitude, @ApiParam(value = "Unique customer identifier to be used for experience customization.") @RequestParam(value = "customer_uuid", required = false) UUID customerUuid, @ApiParam(value = "Unique identifier representing a specific product for a given latitude & longitude.") @RequestParam(value = "product_id", required = false) String productId);

}
